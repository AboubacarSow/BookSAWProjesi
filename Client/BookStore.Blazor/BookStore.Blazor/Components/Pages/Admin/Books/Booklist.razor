@page "/admin/books"
@using Syncfusion.Blazor.Buttons
@inject IServiceManager _manager

<PageTitle>Kitaplar</PageTitle>  

@if(books ==null){
    <p><em> Loading...</em>  </p>
}
else{
    <div class="container mx-3">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="entete">
                <h4 class="title"><i class="fa-solid fa-book me-2"></i>Kitaplar</h4>
                <a href="admin/createBook" class="btn btn-outline-primary ms-2">
                    <i class="fa-solid fa-plus"></i>
                    Yeni Kitap Ekle
                </a>
            </div>
        </div>
        @if(!string.IsNullOrEmpty(erreurMessage))
        {
            <div class="alert alert-danger" role="alert">
                <i class="fa-solid fa-triangle-exclamation"></i>
                @erreurMessage
            </div>
        }
        @if(!string.IsNullOrEmpty(successMessage))
        {
            <div class="alert alert-success" role="alert">
                <i class="fa-solid fa-circle-check"></i>
                @successMessage
            </div>
        }
       
        <div class="d-flex margin-auto">
            <div class="input-group mb-3">
                <input type="text" class="form-control" placeholder="Arama yapın..." aria-label="Arama yapın..." aria-describedby="button-addon2">
                <button class="btn btn-outline-primary" type="button" id="button-addon2">
                    <i class="fa-solid fa-magnifying-glass"></i>
                    Arama
                </button>
            </div>
            <div class="input-group mb-3 ms-2">
                <select class="form-select" id="inputGroupSelect02">
                    <option selected>Hepsi</option>
                    <option value="1">Aktif</option>
                    <option value="2">Pasif</option>
                </select>
                <button class="btn btn-outline-primary" type="button" id="button-addon2">
                    <i class="fa-solid fa-filter"></i>
                    Filtrele
                </button>
            </div>

        </div>
        <div class="margin-auto mb-3 table-responsive tableau">
            <table class="table table-hover table-striped table-sm ">
                <thead class="rounded-3 table-header">
                    <tr>
                        <th>N°</th>
                        <th>Ad</th>
                        <th>Fıyat</th>
                        <th>Stok</th>
                        <th>Kategori</th>
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var book in books)
                    {
                        count++;
                        <tr class="text-nowrap">
                            <td>@count</td>
                            <td>@book.Name</td>
                            <td>@book.Price</td>
                            <td>@book.Stock</td>
                            <td>@book.Category.CategoryName</td>
                            <td>
                                <div>
                                    <button class="btn btn-danger" @onclick="PrintHelloworld">
                                        <i class="fa fa-trash me-1"></i> Sil
                                    </button>
                                    <a href="admin/editBook/@book.Id" class="btn btn-success" >
                                    <i class="fa fa-edit me-1"></i>
                                    Güncelle</a> 
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
         </div>
    </div>
}


@code{
    private string erreurMessage=string.Empty;
    private string successMessage=string.Empty;
    private int count=0;
    private List<ResultBookDto>? books;
    protected override async Task  OnInitializedAsync()
    {
        books = await _manager.BookService.GetAllBooksAsync();
    }
    private async Task Delete(int id)
    {
       
            //var result = await _manager.BookService.DeleteBookAsync(id);
            //var response= result.IsSuccessStatusCode;
            
            successMessage = $"Simulation de la suppression. Book ID: {id} supprimé avec succès.";
            //books = await _manager.BookService.GetAllBooksAsync();
            await Task.Delay(500);
            StateHasChanged();
    }
    private void PrintHelloworld()
    {
        successMessage = "Hello World!";
        StateHasChanged();
    }
    
}