@inject IServiceManager _manager
<section id="best-selling" class="leaf-pattern-overlay">
    <div class="corner-pattern-overlay"></div>
    <div class="container">
        <div class="row justify-content-center">

            <div class="col-md-8">

                <div class="row">

                    <div class="col-md-6">
                        <figure class="products-thumb">
                            <img src="@_bestSellingBook.ImageUrl" alt="book" class="single-image">
                        </figure>
                    </div>

                    <div class="col-md-6">
                        <div class="product-entry">
                            <h2 class="section-title divider">En çok satılan Kitap</h2>

                            <div class="products-content">
                                <div class="author-name">@_bestSellingBook.Author</div>
                                <h3 class="item-title">@_bestSellingBook.Name</h3>
                                <p>@_bestSellingBook.Description</p>
                                <div class="item-price">$ @_bestSellingBook.Price</div>
                                <div class="btn-wrap">
                                    <a href="#" class="btn-accent-arrow">Deha fazlası gör <i
                                        class="icon icon-ns-arrow-right"></i></a>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <!-- / row -->

            </div>

        </div>
    </div>
</section>


@code{
    private ResultBookDto _bestSellingBook=new() ;
    protected override async Task OnInitializedAsync()
    {
        var books = await _manager.BookService.GetAllBooksAsync();
        var count = books.Count;
        var bookIds = (from book in books
                       select new { book.Id });
        var dictionaire = new Dictionary<int, int>();
        int index = 0;
        foreach(var value in bookIds)
        {
            index++;
            dictionaire.Add(index, value.Id);
        }
        var rdn = new Random().Next(1, count);
        var randomId = dictionaire[rdn];
        _bestSellingBook = books.Find(b => b.Id == randomId);
    }
}